<?php

define("DS", DIRECTORY_SEPARATOR);
define("DOWNLOAD_URL", "https://github.com/tsantef/pf/zipball/master");
define("INSTALL_DIR", str_replace("/", DS, "/Users/tsantef/pftest")); #"/usr/local/phpfog/pf"
define("BIN_DIR", str_replace("/", DS, "/usr/bin"));

process($argv);

function process($argv) {

    # No arguments, display help text
    if (0 === count($argv)) {
        display_help();
        exit(0);
    }

    # Run through all arguments
    foreach ($argv as $arg) {
        switch ($arg) {
            case '-h':
            case '--help':
                display_help();
                exit(0);
                break;
            case '-c':
            case '--check':
                exit(check_platform());
                break;
            case '-f':
            case '--force':
                install();
                break;
            default:
                break;
        }
    }

    # No arguments, if check_platform() passes, install
    if (check_platform()) {
        install();
    }

    exit(0);
}

/**
 * displays the help text
 */
function display_help() {
    echo <<<EOF
pf Installer
------------
Options
-h, --help   Display this text
-c, --check  Display the environment info
-f, --force  Forces the installation

EOF;
}

function check_platform() {
    $errors = array();

    if (version_compare(PHP_VERSION, '5.3.2', '<')) {
        $errors['php'] = PHP_VERSION;
    }

    if (!empty($errors)) {
        out("Composer detected that you have enabled some settings in your `php.ini` file that can make Composer unable to work properly.".PHP_EOL, 'error');

        echo PHP_EOL.'Make sure that you have changed options listed below:'.PHP_EOL;
        foreach ($errors as $error => $actual) {
            if ($error == 'php') {
                $text = "    PHP_VERSION (actual: {$actual})".PHP_EOL;
            }
            out($text, 'info');
        }
        echo PHP_EOL;
        return 0;
    }

    out("All settings correct for using Composer".PHP_EOL, 'success');
    return 1;
}


function install() {
    $source_package = "/Users/tsantef/test.zip";

    info('Preparing installation directory...'.PHP_EOL);
    if (!is_dir(INSTALL_DIR) && !mkdir(INSTALL_DIR, 0777, true)) {
        error('Failed to create installation folder.'.PHP_EOL);
        exit(1);
    }

    info('Downloading source package...'.PHP_EOL);
    if (!copy(DOWNLOAD_URL, $source_package)) {
        error('Failed to download installation package.'.PHP_EOL);
        exit(1);
    }

    info('Unpacking...'.PHP_EOL);
    $zip = new ZipArchive;
    $res = $zip->open($source_package);
    if ($res === TRUE) {
        $zip->extractTo(INSTALL_DIR.DS);
        $zip->close();
    } else {
        error('Failed unpack download.'.PHP_EOL);
        exit(1);
    }

    # Remove the package files out of the package folder
    $package_contents = glob(INSTALL_DIR.DS.'*');
    $ignore = array('.', '..');
    if (1 === count($package_contents)) {
        $inner_folder = $package_contents[0];
        foreach (array_merge(glob($inner_folder.DS.'.*'), glob($inner_folder.DS.'*')) as $filename) {
            $basename = basename($filename);
            if (!in_array($basename, $ignore)) {
                rename($filename, INSTALL_DIR.DS.$basename);
            }
        }
        rmdir($inner_folder);
    }
echo INSTALL_DIR.DS."bin".DS."pf" ."  ". BIN_DIR.DS."pf";
    if (!@symlink(INSTALL_DIR.DS."bin".DS."pf", BIN_DIR.DS."pf")) {
        error('Failed install pf bin file. Try using sudo'.PHP_EOL);
        exit(1);
    }

    info('Cleaning up...'.PHP_EOL);
    if (is_readable($source_package)) {
        unlink($source_package);
    }
}

function info($message) {
    echo sprintf("\033[0;36m%s\033[0m", $message); 
}

function error($message) {
    echo sprintf("\033[31;31m%s\033[0m", $message);
}

function out($text, $color = null) {
    $styles = array(
        'success' => "\033[0;32m%s\033[0m",
        'error' => "\033[31;31m%s\033[0m",
        'info' => "\033[33;33m%s\033[0m"
    );

    echo sprintf(isset($styles[$color]) ? $styles[$color] : "%s", $text);
}
